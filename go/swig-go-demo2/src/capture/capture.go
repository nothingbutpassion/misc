/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: capture.i

package capture

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
extern void _wrap_Swig_free_capture_5ccb65fa138e15bb(uintptr_t arg1);
extern uintptr_t _wrap_new_Capture_capture_5ccb65fa138e15bb(void);
extern void _wrap_delete_Capture_capture_5ccb65fa138e15bb(uintptr_t arg1);
extern _Bool _wrap_Capture_open_capture_5ccb65fa138e15bb(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_Capture_read_capture_5ccb65fa138e15bb(uintptr_t arg1);
extern void _wrap_Capture_edge_capture_5ccb65fa138e15bb(uintptr_t arg1);
extern void _wrap_Capture_show_capture_5ccb65fa138e15bb(uintptr_t arg1, swig_type_1 arg2);
extern void _wrap_Capture_createWindow_capture_5ccb65fa138e15bb(uintptr_t arg1, swig_type_2 arg2);
extern void _wrap_Capture_destroyWindow_capture_5ccb65fa138e15bb(uintptr_t arg1, swig_type_3 arg2);
extern swig_intgo _wrap_Capture_waitKey_capture_5ccb65fa138e15bb(uintptr_t arg1, swig_intgo arg2);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0))
}

type SwigcptrCapture uintptr

func (p SwigcptrCapture) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCapture) SwigIsCapture() {
}

func NewCapture() (_swig_ret Capture) {
	var swig_r Capture
	swig_r = (Capture)(SwigcptrCapture(C._wrap_new_Capture_capture_5ccb65fa138e15bb()))
	return swig_r
}

func DeleteCapture(arg1 Capture) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Capture_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCapture) Open(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Capture_open_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrCapture) Read() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Capture_read_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCapture) Edge() {
	_swig_i_0 := arg1
	C._wrap_Capture_edge_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCapture) Show(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Capture_show_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0), *(*C.swig_type_1)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrCapture) CreateWindow(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Capture_createWindow_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrCapture) DestroyWindow(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Capture_destroyWindow_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrCapture) WaitKey(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Capture_waitKey_capture_5ccb65fa138e15bb(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

type Capture interface {
	Swigcptr() uintptr
	SwigIsCapture()
	Open(arg2 int) (_swig_ret bool)
	Read() (_swig_ret bool)
	Edge()
	Show(arg2 string)
	CreateWindow(arg2 string)
	DestroyWindow(arg2 string)
	WaitKey(arg2 int) (_swig_ret int)
}


